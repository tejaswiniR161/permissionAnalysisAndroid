package com.google.android.gms.internal;

import android.support.annotation.NonNull;
import com.google.android.gms.common.api.OptionalPendingResult;
import com.google.android.gms.common.api.PendingResult;
import com.google.android.gms.common.api.Result;
import com.google.android.gms.common.api.ResultCallback;
import com.google.android.gms.common.api.ResultTransform;
import com.google.android.gms.common.api.TransformedResult;
import java.util.concurrent.TimeUnit;

public final class zzrg<R extends Result> extends OptionalPendingResult<R> {

    /* renamed from: zi */
    private final zzqe<R> f2177zi;

    public zzrg(PendingResult<R> pendingResult) {
        if (!(pendingResult instanceof zzqe)) {
            throw new IllegalArgumentException("OptionalPendingResult can only wrap PendingResults generated by an API call.");
        }
        this.f2177zi = (zzqe) pendingResult;
    }

    public R await() {
        return this.f2177zi.await();
    }

    public R await(long j, TimeUnit timeUnit) {
        return this.f2177zi.await(j, timeUnit);
    }

    public void cancel() {
        this.f2177zi.cancel();
    }

    public R get() {
        if (isDone()) {
            return await(0, TimeUnit.MILLISECONDS);
        }
        throw new IllegalStateException("Result is not available. Check that isDone() returns true before calling get().");
    }

    public boolean isCanceled() {
        return this.f2177zi.isCanceled();
    }

    public boolean isDone() {
        return this.f2177zi.isReady();
    }

    public void setResultCallback(ResultCallback<? super R> resultCallback) {
        this.f2177zi.setResultCallback(resultCallback);
    }

    public void setResultCallback(ResultCallback<? super R> resultCallback, long j, TimeUnit timeUnit) {
        this.f2177zi.setResultCallback(resultCallback, j, timeUnit);
    }

    @NonNull
    public <S extends Result> TransformedResult<S> then(@NonNull ResultTransform<? super R, ? extends S> resultTransform) {
        return this.f2177zi.then(resultTransform);
    }

    public void zza(PendingResult.zza zza) {
        this.f2177zi.zza(zza);
    }

    public Integer zzaqf() {
        return this.f2177zi.zzaqf();
    }
}
